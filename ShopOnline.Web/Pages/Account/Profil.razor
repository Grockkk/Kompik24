@page "/profile"
@using ShopOnline.Models.Dtos
@using ShopOnline.Web.Services
@inject IUserService userService
@inject NavigationManager NavigationManager
@inject HttpClient httpClient


<h3>Profil Użytkownika</h3>

@if (user == null)
{
    <p>Ładowanie...</p>
}
else
{
    <section class="vh-100" style="background-color: #f4f5f7;">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col col-lg-6 mb-4 mb-lg-0">
                    <div class="card mb-3" style="border-radius: .5rem;">
                        <div class="row g-0">
                            <div class="col-md-4 gradient-custom text-center text-white"
                             style="border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                                 alt="Avatar" class="img-fluid my-5" style="width: 80px;" />
                                <button class="btn btn-primary mt-3" @onclick="EditUser">Edytuj użytkownika</button>

                                <h5>@user.UserName</h5>
                            </div>
                            <div class="col-md-8">
                                <div class="card-body p-4">
                                    <h6>Informacje</h6>
                                    <hr class="mt-0 mb-4">
                                    <div class="row pt-1">
                                        <div class="col-6 mb-3">
                                            <h6>Email</h6>
                                            <p class="text-muted">@user.Email</p>
                                        </div>
                                        <div class="col-6 mb-3">
                                            <h6>Nazwa użytkownika</h6>
                                            <p class="text-muted">@user.UserName</p>
                                        </div>
                                    </div>
                                    <h6>Adres</h6>
                                    <hr class="mt-0 mb-4">
                                    <div class="row pt-1">
                                        <div class="col-10 mb-3">
                                            <h6>@user.Miasto, ulica @user.Ulica @user.NumerDomu</h6>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button class="btn btn-danger mt-3" @onclick="DeleteUser">Usuń użytkownika</button>
                    <button class="btn btn-dark mt-3" @onclick="Logout">Wyloguj</button>
                </div>
            </div>
        </div>
    </section>
}

@code {
    private UserDto? user;

    protected override async Task OnInitializedAsync()
    {
        var usersDto = await userService.GetUsers();

        if (usersDto != null)
        {
            user = usersDto.SingleOrDefault(p => p.Autentykacja == true);
        }
        else
        {
            user = null;
        }
    }
    private void EditUser()
    {
        // Przekieruj na stronę rejestracji, przekazując obecne dane użytkownika jako parametr
        NavigationManager.NavigateTo($"/edit-profile");
    }

    private async Task DeleteUser()
    {
        if (user != null)
        {
            try
            {
                await userService.DeleteUser(user.Id);
                NavigationManager.NavigateTo("/login", true);
            }
            catch (Exception ex)
            {
                // Handle the error, log it, show message, etc.
                Console.WriteLine($"Error deleting user: {ex.Message}");
            }
        }
    }

    private async Task Logout()
    {
        if (user != null)
        {
            try
            {
                var toggleResponse = await httpClient.PutAsync($"api/user/{user.Id}/toggle-authentication", null);
                NavigationManager.NavigateTo("/login", true);

            }
            catch (Exception ex)
            {
                // Handle the error, log it, show message, etc.
                Console.WriteLine($"Error logging out user: {ex.Message}");
            }
        }
    }
}
